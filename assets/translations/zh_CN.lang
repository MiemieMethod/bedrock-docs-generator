# 命令键名格式：`command.命令名.重载名.参数名.description=翻译`
# 对于参数而言，如果不指定重载名，则该命令内所有同名参数均会被设置为该值；指定了重载名的参数只会对该重载生效。
# 对单独一个重载描述时，可以使用`command.命令名.重载名.description=翻译`
# 对于枚举类型的参数，可以使用`command.enum.枚举名.description=翻译`
# 如果该枚举类型的参数使用“命令名”的样式翻译，那么该键会优先生效。
# 枚举的值可以使用`command.enum.枚举名.枚举值=翻译`

# 命令
command.ability.description=可以设置一个玩家的能力。    # 命令描述
command.ability.player.description=目标玩家的目标选择器。  # 全局的指定参数描述
command.ability.1.description=授予或撤回目标玩家的某一项能力。  # 第一个重载描述
command.ability.1.value.description=授予能力（是）还是撤回能力（否）。   # 第一个重载指定参数描述，会覆盖`command.enum.boolean.description`和`command.ability.value.description`
command.ability.2.description=查询目标玩家的能力。    # 第二个重载描述

# 命令枚举
command.enum.ability.description=一项能力。  # 枚举描述
command.enum.ability.mayfly=能够飞行    # 枚举值描述
command.enum.ability.mute=禁言
command.enum.ability.worldbuilder=世界建造者

# command.enum.boolean.description=布尔值    # 像这种太宽泛的、需要结合上下文的枚举就不要填写全局描述，留到每一个用到该枚举的地方单独写描述
command.enum.boolean.true=是
command.enum.boolean.false=否

# 数据包描述格式：`protocol.packet.数据包名.description=翻译`
# 数据包参数描述格式：`protocol.packet.数据包名.参数名.description=翻译`
# 数据包枚举描述格式：`protocol.enum.枚举名=翻译`
# 如果是数据包类型，可以使用`protocol.type.数据包名.description=翻译`，其余同理

# 数据包
protocol.packet.actoreventpacket.description=通信活动对象事件。  # 数据包描述
protocol.packet.actoreventpacket.target_runtime_id.description=目标活动对象的运行时标识符。  # 数据包指定参数描述
protocol.packet.actoreventpacket.event_id.description=事件标识符。  # 数据包另一指定参数描述

# 类型
protocol.type.actorlink.description=活动对象链接。  # 数据包类型描述

# 枚举
protocol.enum.none=无

# 脚本API

# @minecraft/server
script_api.mojang-minecraft.description=服务端的基础模块，在最新模块版本中已改名为`@minecraft/server`。  # 旧版模块描述
script_api.@minecraft/server.description=服务端的基础模块。  # 模块描述

script_api.@minecraft/server.biometype.description=代表生物群系的类型。
script_api.@minecraft/server.biometype.id.description=该生物群系类型的标识符。
script_api.@minecraft/server.biometypes.description=Minecraft中可用生物群系的集合。
script_api.@minecraft/server.biometypes.get.description=获取一个指定的生物群系类型。
script_api.@minecraft/server.biometypes.get.typename.description=生物群系的标识符。
script_api.@minecraft/server.biometypes.get.return=如果该生物群系存在，返回该生物群系的`BiomeType`对象，否则返回`undefined`。
script_api.@minecraft/server.biometypes.getall.description=获取Minecraft中已注册的所有生物群系类型。
script_api.@minecraft/server.biometypes.getall.return=一个包含所有生物群系的`BiomeType`对象数组。
script_api.@minecraft/server.block.description=代表维度中的一个方块。一个方块对应了一维度中唯一的X、Y和Z轴坐标值，可读取或修改该坐标下的方块状态等数据。
script_api.@minecraft/server.block.dimension.description=返回该方块所在的维度的对象。
script_api.@minecraft/server.block.isair.description=如果该方块为空气，值为`true`。
script_api.@minecraft/server.block.isliquid.description=如果该方块属于液体方块（含水方块不属于液体方块），值为`true`。
script_api.@minecraft/server.block.issolid.description=如果该方块属于固体方块，值为`true`。
script_api.@minecraft/server.block.iswaterlogged.description=表示并接受设置该方块是否含水。如果该方块含水，值为`true`。
script_api.@minecraft/server.block.location.description=该方块的坐标。
script_api.@minecraft/server.block.permutation.description=该方块的置换。
script_api.@minecraft/server.block.type.description=该方块的类型。
script_api.@minecraft/server.block.typeid.description=该方块的类型对应的标识符。
script_api.@minecraft/server.block.x.description=该方块的X轴坐标值。
script_api.@minecraft/server.block.y.description=该方块的Y轴坐标值。
script_api.@minecraft/server.block.z.description=该方块的Z轴坐标值。
script_api.@minecraft/server.block.above.description=获取位于该方块上方一定距离处的方块（即Y轴正方向延长线上的方块）。
script_api.@minecraft/server.block.above.steps.description=向Y轴正方向延伸的距离（以米为单位）。
script_api.@minecraft/server.block.above.return=获取到的方块对象。
script_api.@minecraft/server.block.below.description=获取位于该方块下方一定距离处的方块（即Y轴负方向延长线上的方块）。
script_api.@minecraft/server.block.below.steps.description=向Y轴负方向延伸的距离（以米为单位）。
script_api.@minecraft/server.block.below.return=获取到的方块对象。
script_api.@minecraft/server.block.bottomcenter.description=获取该方块底面中心处的坐标（即该方块在X和Z轴上的中心坐标）。
script_api.@minecraft/server.block.bottomcenter.return=包含该方块底面中心处坐标值的`Vector3`对象。
script_api.@minecraft/server.block.canplace.description=根据类型或置换检查是否可在该方块的某个面上放置给定的方块。
script_api.@minecraft/server.block.canplace.blocktoplace.description=要检查放置可行性的方块类型(`BlockType`对象)或方块置换(`BlockPermutation`对象)。
script_api.@minecraft/server.block.canplace.facetoplaceon.description=要检查的面。
script_api.@minecraft/server.block.canplace.return=如果给定的方块可以放置在该方块的这个面上，返回`true`。
script_api.@minecraft/server.block.center.description=获取该方块中心处的坐标（即该方块在X、Y和Z轴上的中心坐标）。
script_api.@minecraft/server.block.center.return=包含该方块中心处坐标值的`Vector3`对象。
script_api.@minecraft/server.block.east.description=获取位于该方块东面一定距离处的方块（即X轴正方向延长线上的方块）。
script_api.@minecraft/server.block.east.steps.description=向X轴正方向延伸的距离（以米为单位）。
script_api.@minecraft/server.block.east.return=获取到的方块对象。
script_api.@minecraft/server.block.getcomponent.description=获取一个该方块的组件。
script_api.@minecraft/server.block.getcomponent.componentid.description=要获取的组件的标识符。
script_api.@minecraft/server.block.getcomponent.return=如果该方块具有这个组件，返回该组件的对象，否则返回`undefined`。
script_api.@minecraft/server.block.getitemstack.description=创建一个基于该方块的物品堆叠。
script_api.@minecraft/server.block.getitemstack.amount.description=该物品堆叠所含物品的数量。
script_api.@minecraft/server.block.getitemstack.withdata.description=该物品堆叠是否附加用户数据。
script_api.@minecraft/server.block.getitemstack.return=创建出的物品堆叠对象。如果方块类型不兼容则返回`undefined`。
script_api.@minecraft/server.block.getredstonepower.description=获取该方块的净红石能量强度。
script_api.@minecraft/server.block.getredstonepower.return=如果该方块可被充能，返回其红石能量强度，否则返回`undefined`。
script_api.@minecraft/server.block.gettags.description=获取该方块的所有标签。
script_api.@minecraft/server.block.gettags.return=一个包含该方块所有标签的数组。
script_api.@minecraft/server.block.hastag.description=检查该方块的置换中是否具有指定的标签。
script_api.@minecraft/server.block.hastag.tag.description=要检查的标签。
script_api.@minecraft/server.block.hastag.return=如果该方块的置换中具有此标签，返回`true`。
script_api.@minecraft/server.block.isvalid.description=检查该方块是否有效（被加载且在可放置方块范围内）。
script_api.@minecraft/server.block.isvalid.return=如果该方块有效，返回`true`。
script_api.@minecraft/server.block.matches.description=测试该方块是否符合给定条件（方块类型和方块状态）。
script_api.@minecraft/server.block.matches.blockname.description=要测试的方块类型的标识符。
script_api.@minecraft/server.block.matches.states.description=要测试的方块状态集合。
script_api.@minecraft/server.block.matches.return=如果该方块符合给定的条件，返回`true`。
script_api.@minecraft/server.block.north.description=获取位于该方块北面一定距离处的方块（即Z轴负方向延长线上的方块）。
script_api.@minecraft/server.block.north.steps.description=向Z轴负方向延伸的距离（以米为单位）。
script_api.@minecraft/server.block.north.return=获取到的方块对象。
script_api.@minecraft/server.block.offset.description=获取相对于该方块位置给定偏移量处的方块。
script_api.@minecraft/server.block.offset.offset.description=要偏移的量（以米为单位）。
script_api.@minecraft/server.block.offset.return=获取到的方块对象。
script_api.@minecraft/server.block.setpermutation.description=设置该方块的置换。
script_api.@minecraft/server.block.setpermutation.permutation.description=要设置的置换的对象。
script_api.@minecraft/server.block.settype.description=设置该方块的类型。
script_api.@minecraft/server.block.settype.blocktype.description=要设置的类型的标识符或`BlockType`对象。
script_api.@minecraft/server.block.setwaterlogged.description=设置该方块的含水情况（仅对可含水方块有效）。
script_api.@minecraft/server.block.setwaterlogged.iswaterlogged.description=如果为`true`，则使该方块含水，否则取消含水。
script_api.@minecraft/server.block.south.description=获取位于该方块南面一定距离处的方块（即Z轴正方向延长线上的方块）。
script_api.@minecraft/server.block.south.steps.description=向Z轴正方向延伸的距离（以米为单位）。
script_api.@minecraft/server.block.south.return=获取到的方块对象。
script_api.@minecraft/server.block.trysetpermutation.description=先检查放置可行性，然后再尝试设置该方块的置换。
script_api.@minecraft/server.block.trysetpermutation.permutation.description=要设置的置换的`BlockPermutation`对象。
script_api.@minecraft/server.block.trysetpermutation.return=如果成功设置了该方块的置换，返回`true`。
script_api.@minecraft/server.block.west.description=获取位于该方块西面一定距离处的方块（即X轴负方向延长线上的方块）。
script_api.@minecraft/server.block.west.steps.description=向X轴负方向延伸的距离（以米为单位）。
script_api.@minecraft/server.block.west.return=获取到的方块对象。
script_api.@minecraft/server.blockcomponent.description=方块组件的基本类型。
script_api.@minecraft/server.blockcomponent.block.description=该组件所属的方块实例。
script_api.@minecraft/server.blockcomponententityfallonevent.description=包含掉落在方块上的实体的信息。
script_api.@minecraft/server.blockcomponententityfallonevent.entity.description=掉落在该方块上的实体。
script_api.@minecraft/server.blockcomponententityfallonevent.falldistance.description=实体掉落到该方块上所经过的距离。
script_api.@minecraft/server.blockcomponentonplaceevent.description=包含被放置的方块的信息。
script_api.@minecraft/server.blockcomponentonplaceevent.previousblock.description=放置方块时该位置被替换掉的方块。
script_api.@minecraft/server.blockcomponentplayerdestroyevent.description=包含被玩家破坏的方块的信息。
script_api.@minecraft/server.blockcomponentplayerdestroyevent.destroyedblockpermutation.description=被玩家破坏的方块的置换。
script_api.@minecraft/server.blockcomponentplayerdestroyevent.player.description=破坏该方块的玩家。
script_api.@minecraft/server.blockcomponentplayerinteractevent.description=包含被玩家互动的方块的信息。
script_api.@minecraft/server.blockcomponentplayerinteractevent.face.description=该方块参与互动的面。
script_api.@minecraft/server.blockcomponentplayerinteractevent.facelocation.description=玩家互动时点击的位置（以该方块底部西北角顶点为坐标原点）。
script_api.@minecraft/server.blockcomponentplayerinteractevent.player.description=互动该方块的玩家。
script_api.@minecraft/server.blockcomponentplayerplacebeforeevent.description=包含玩家放置方块前的事件信息。
script_api.@minecraft/server.blockcomponentplayerplacebeforeevent.cancel.description=如果设置为`true`，则可取消本次方块放置事件。
script_api.@minecraft/server.blockcomponentplayerplacebeforeevent.face.description=该方块被放置到的面（即玩家放置该方块时点击的面）。
script_api.@minecraft/server.blockcomponentplayerplacebeforeevent.permutationtoplace.description=该方块被放置时将要设置的置换。
script_api.@minecraft/server.blockcomponentplayerplacebeforeevent.player.description=正在放置该方块的玩家。
script_api.@minecraft/server.blockcomponentrandomtickevent.description=包含方块的随机刻事件信息。
script_api.@minecraft/server.blockcomponentregistry.description=用于提供方块数据驱动自定义组件注册功能。
script_api.@minecraft/server.blockcomponentregistry.registercustomcomponent.description=注册一个自定义方块组件。
script_api.@minecraft/server.blockcomponentregistry.registercustomcomponent.name.description=要注册的自定义组件的名称（必须带有命名空间）。
script_api.@minecraft/server.blockcomponentregistry.registercustomcomponent.customcomponent.description=该组件绑定事件的集合。
script_api.@minecraft/server.blockcomponentstepoffevent.description=包含实体离开方块表面时的信息。
script_api.@minecraft/server.blockcomponentstepoffevent.entity.description=离开该方块表面的实体。
script_api.@minecraft/server.blockcomponentsteponevent.description=包含实体走上方块表面时的信息。
script_api.@minecraft/server.blockcomponentsteponevent.entity.description=走上该方块表面的实体。
script_api.@minecraft/server.blockcomponenttickevent.description=包含方块的游戏刻事件信息。
script_api.@minecraft/server.blockevent.description=包含方块的事件信息。
script_api.@minecraft/server.blockevent.block.description=受此事件影响的方块。
script_api.@minecraft/server.blockevent.dimension.description=此事件中该方块所在的维度。
script_api.@minecraft/server.blockexplodeafterevent.description=包含方块爆炸后事件的信息。
script_api.@minecraft/server.blockexplodeafterevent.explodedblockpermutation.description=受到爆炸方块的置换。
script_api.@minecraft/server.blockexplodeafterevent.source.description=爆炸源（实体）。
script_api.@minecraft/server.blockexplodeaftereventsignal.description=用于管理与方块爆炸后事件有关的回调函数。
script_api.@minecraft/server.blockexplodeaftereventsignal.subscribe.description=订阅方块爆炸后事件并执行给定的回调函数。
script_api.@minecraft/server.blockexplodeaftereventsignal.subscribe.callback.description=要执行的回调函数。
script_api.@minecraft/server.blockexplodeaftereventsignal.subscribe.return=订阅此事件的回调函数。
script_api.@minecraft/server.blockexplodeaftereventsignal.unsubscribe.description=移除给定回调函数对方块爆炸后事件的订阅。
script_api.@minecraft/server.blockexplodeaftereventsignal.unsubscribe.callback.description=要移除的回调函数。
script_api.@minecraft/server.blockinventorycomponent.description=代表一个物品栏容器方块的物品栏组件。
script_api.@minecraft/server.blockinventorycomponent.container.description=该方块物品栏容器对象。
script_api.@minecraft/server.blocklavacontainercomponent.description=代表一个装有熔岩的液体容器方块的熔岩容器组件。
script_api.@minecraft/server.blockliquidcontainercomponent.description=液体容器方块的液体容器基组件。
script_api.@minecraft/server.blockliquidcontainercomponent.filllevel.description=该液体容器当前的相对装填等级。
script_api.@minecraft/server.blockliquidcontainercomponent.isvalidliquid.description=检查该液体容器是否有效且装填内容与引用类型相同。
script_api.@minecraft/server.blockliquidcontainercomponent.isvalidliquid.return=如果该液体容器有效且装填内容与引用类型相同，返回`true`(例如，一个方块未被加载，或它不再是一个液体容器方块，又或是装填有熔岩但目前引用的是药水容器组件，都不会返回`true`)。
script_api.@minecraft/server.blocklocationiterator.description=一个方块坐标迭代器。
script_api.@minecraft/server.blocklocationiterator.[symbol.iterator].description=该迭代器的生成器函数。
script_api.@minecraft/server.blocklocationiterator.[symbol.iterator].return=该迭代器的迭代器对象。
script_api.@minecraft/server.blocklocationiterator.next.description=进行一次迭代并获取迭代结果。
script_api.@minecraft/server.blocklocationiterator.next.return=当前迭代结果对象。
script_api.@minecraft/server.blockpermutation.description=代表方块的置换。
script_api.@minecraft/server.blockpermutation.type.description=该置换所包含的方块类型。
script_api.@minecraft/server.blockpermutation.getallstates.description=获取该置换中包含的所有可用的方块状态。
script_api.@minecraft/server.blockpermutation.getallstates.return=一个记录了该置换所有可用方块状态的对象。
script_api.@minecraft/server.blockpermutation.getitemstack.description=创建一个基于该方块置换的物品堆叠。
script_api.@minecraft/server.blockpermutation.getitemstack.amount.description=该物品堆叠所含物品的数量。
script_api.@minecraft/server.blockpermutation.getitemstack.return=创建出的物品堆叠对象。
script_api.@minecraft/server.blockpermutation.getstate.description=获取该置换中一个指定的方块状态。
script_api.@minecraft/server.blockpermutation.getstate.statename.description=要获取的状态的标识符。
script_api.@minecraft/server.blockpermutation.getstate.return=如果该置换含有这个状态，返回此状态的值，否则返回`undefined`。
script_api.@minecraft/server.blockpermutation.gettags.description=获取该置换对应方块所拥有的标签。
script_api.@minecraft/server.blockpermutation.gettags.return=一个包含对应方块所有标签的数组。
script_api.@minecraft/server.blockpermutation.hastag.description=检查该置换对应方块是否拥有给定标签。
script_api.@minecraft/server.blockpermutation.hastag.tag.description=要检查的标签。
script_api.@minecraft/server.blockpermutation.hastag.return=如果对应方块有这个标签，返回`true`。
script_api.@minecraft/server.blockpermutation.matches.description=测试该置换的内容是否与给定内容相同。若不传入方块状态，则只对方块类型进行测试。
script_api.@minecraft/server.blockpermutation.matches.blockname.description=要测试的方块类型的名称。
script_api.@minecraft/server.blockpermutation.matches.states.description=要测试的方块状态。
script_api.@minecraft/server.blockpermutation.matches.return=如果该置换的内容与给定内容相同，返回`true`。
script_api.@minecraft/server.blockpermutation.resolve.description=根据方块名称和方块状态创建一个方块置换。
script_api.@minecraft/server.blockpermutation.resolve.blockname.description=置换中的方块类型的名称。
script_api.@minecraft/server.blockpermutation.resolve.states.description=置换中的方块状态。
script_api.@minecraft/server.blockpermutation.resolve.return=创建出的方块置换。
script_api.@minecraft/server.blockpermutation.withstate.description=通过修改指定方块状态创建一个派生自该置换的方块置换。
script_api.@minecraft/server.blockpermutation.withstate.name.description=派生置换中要修改的方块状态的标识符。
script_api.@minecraft/server.blockpermutation.withstate.value.description=派生置换中要修改的方块状态的值。
script_api.@minecraft/server.blockpermutation.withstate.return=创建出的派生置换。
