# 命令键名格式：`command.命令名.重载名.参数名.description=翻译`
# 对于参数而言，如果不指定重载名，则该命令内所有同名参数均会被设置为该值；指定了重载名的参数只会对该重载生效。
# 对单独一个重载描述时，可以使用`command.命令名.重载名.description=翻译`
# 对于枚举类型的参数，可以使用`command.enum.枚举名.description=翻译`
# 如果该枚举类型的参数使用“命令名”的样式翻译，那么该键会优先生效。
# 枚举的值可以使用`command.enum.枚举名.枚举值=翻译`

# 命令
command.ability.description=可以设置一个玩家的能力。    # 命令描述
command.ability.player.description=目标玩家的目标选择器。  # 全局的指定参数描述
command.ability.1.description=授予或撤回目标玩家的某一项能力。  # 第一个重载描述
command.ability.1.value.description=授予能力（是）还是撤回能力（否）。   # 第一个重载指定参数描述，会覆盖`command.enum.boolean.description`和`command.ability.value.description`
command.ability.2.description=查询目标玩家的能力。    # 第二个重载描述

# 命令枚举
command.enum.ability.description=一项能力。  # 枚举描述
command.enum.ability.mayfly=能够飞行    # 枚举值描述
command.enum.ability.mute=禁言
command.enum.ability.worldbuilder=世界建造者

# command.enum.boolean.description=布尔值    # 像这种太宽泛的、需要结合上下文的枚举就不要填写全局描述，留到每一个用到该枚举的地方单独写描述
command.enum.boolean.true=是
command.enum.boolean.false=否

# 数据包描述格式：`protocol.packet.数据包名.description=翻译`
# 数据包参数描述格式：`protocol.packet.数据包名.参数名.description=翻译`
# 数据包枚举描述格式：`protocol.enum.枚举名=翻译`
# 如果是数据包类型，可以使用`protocol.type.数据包名.description=翻译`，其余同理

# 数据包
protocol.packet.actoreventpacket.description=通信活动对象事件。  # 数据包描述
protocol.packet.actoreventpacket.target_runtime_id.description=目标活动对象的运行时标识符。  # 数据包指定参数描述
protocol.packet.actoreventpacket.event_id.description=事件标识符。  # 数据包另一指定参数描述

# 类型
protocol.type.actorlink.description=活动对象链接。  # 数据包类型描述

# 枚举
protocol.enum.none=无

# 脚本API

# @minecraft/server
script_api.mojang-minecraft.description=服务端的基础模块，在最新模块版本中已改名为`@minecraft/server`。  # 旧版模块描述
script_api.@minecraft/server.description=服务端的基础模块。  # 模块描述

script_api.@minecraft/server.biometype.description=表示生物群系的类型。
script_api.@minecraft/server.biometype.id.description=该生物群系类型的标识符。
script_api.@minecraft/server.biometypes.description=Minecraft中可用生物群系的集合。
script_api.@minecraft/server.biometypes.get.description=获取一个指定的生物群系类型。
script_api.@minecraft/server.biometypes.get.typename.description=生物群系的标识符。
script_api.@minecraft/server.biometypes.get.return=如果该生物群系存在，返回该生物群系的`BiomeType`对象，否则返回`undefined`。
script_api.@minecraft/server.biometypes.getall.description=获取Minecraft中已注册的所有生物群系类型。
script_api.@minecraft/server.biometypes.getall.return=一个包含所有生物群系的`BiomeType`对象数组。
script_api.@minecraft/server.block.description=表示维度中的一个方块。一个方块对应了一维度中唯一的X、Y和Z轴坐标值，可读取或修改该坐标下的方块状态等数据。
script_api.@minecraft/server.block.dimension.description=返回该方块所在维度的`Dimension`对象。
script_api.@minecraft/server.block.isair.description=如果该方块为空气，值为`true`。
script_api.@minecraft/server.block.isliquid.description=如果该方块属于液体方块（含水方块不属于液体方块），值为`true`。
script_api.@minecraft/server.block.issolid.description=如果该方块属于固体方块，值为`true`。
script_api.@minecraft/server.block.iswaterlogged.description=表示并接受设置该方块是否含水。如果该方块含水，值为`true`。
script_api.@minecraft/server.block.location.description=该方块的坐标。
script_api.@minecraft/server.block.permutation.description=该方块的置换。
script_api.@minecraft/server.block.type.description=该方块的类型。
script_api.@minecraft/server.block.typeid.description=该方块的类型对应的标识符。
script_api.@minecraft/server.block.x.description=该方块的X轴坐标值。
script_api.@minecraft/server.block.y.description=该方块的Y轴坐标值。
script_api.@minecraft/server.block.z.description=该方块的Z轴坐标值。
script_api.@minecraft/server.block.above.description=获取位于该方块上方一定距离处的方块（即Y轴正方向延长线上的方块）。
script_api.@minecraft/server.block.above.steps.description=向Y轴正方向延伸的距离（以方块数为单位）。
script_api.@minecraft/server.block.above.return=获取到的方块的`Block`对象。
script_api.@minecraft/server.block.below.description=获取位于该方块下方一定距离处的方块（即Y轴负方向延长线上的方块）。
script_api.@minecraft/server.block.below.steps.description=向Y轴负方向延伸的距离（以方块数为单位）。
script_api.@minecraft/server.block.below.return=获取到的方块的`Block`对象。
script_api.@minecraft/server.block.bottomcenter.description=获取该方块底面中心处的坐标（即该方块在X和Z轴上的中心坐标）。
script_api.@minecraft/server.block.bottomcenter.return=包含该方块底面中心处坐标值的`Vector3`对象。
script_api.@minecraft/server.block.canplace.description=根据类型或置换检查是否可在该方块的某个面上放置给定的方块。
script_api.@minecraft/server.block.canplace.blocktoplace.description=要检查放置可行性的方块类型(`BlockType`对象)或方块置换(`BlockPermutation`对象)。
script_api.@minecraft/server.block.canplace.facetoplaceon.description=要检查的面。
script_api.@minecraft/server.block.canplace.return=如果给定的方块可以放置在该方块的这个面上，返回`true`。
script_api.@minecraft/server.block.center.description=获取该方块中心处的坐标（即该方块在X、Y和Z轴上的中心坐标）。
script_api.@minecraft/server.block.center.return=包含该方块中心处坐标值的`Vector3`对象。
script_api.@minecraft/server.block.east.description=获取位于该方块东面一定距离处的方块（即X轴正方向延长线上的方块）。
script_api.@minecraft/server.block.east.steps.description=向X轴正方向延伸的距离（以方块数为单位）。
script_api.@minecraft/server.block.east.return=获取到的方块的`Block`对象。
script_api.@minecraft/server.block.getcomponent.description=获取一个该方块的组件。
script_api.@minecraft/server.block.getcomponent.componentid.description=要获取的组件的标识符。
script_api.@minecraft/server.block.getcomponent.return=如果该方块具有这个组件，返回该组件的对象，否则返回`undefined`。
script_api.@minecraft/server.block.getitemstack.description=创建一个基于该方块的物品堆叠。
script_api.@minecraft/server.block.getitemstack.amount.description=该物品堆叠所含物品的数量。
script_api.@minecraft/server.block.getitemstack.withdata.description=该物品堆叠是否附加用户数据。
script_api.@minecraft/server.block.getitemstack.return=创建出的物品堆叠。如果方块类型不兼容则返回`undefined`。
script_api.@minecraft/server.block.getredstonepower.description=获取该方块的净红石能量强度。
script_api.@minecraft/server.block.getredstonepower.return=如果该方块可被充能，返回其红石能量强度，否则返回`undefined`。
script_api.@minecraft/server.block.gettags.description=获取该方块的所有标签。
script_api.@minecraft/server.block.gettags.return=一个包含该方块所有标签的数组。
script_api.@minecraft/server.block.hastag.description=检查该方块的置换中是否具有指定的标签。
script_api.@minecraft/server.block.hastag.tag.description=要检查的标签。
script_api.@minecraft/server.block.hastag.return=如果该方块的置换中具有此标签，返回`true`。
script_api.@minecraft/server.block.isvalid.description=检查该方块是否有效（被加载且在可放置方块范围内）。
script_api.@minecraft/server.block.isvalid.return=如果该方块有效，返回`true`。
script_api.@minecraft/server.block.matches.description=测试该方块是否符合给定条件（方块类型和方块状态）。
script_api.@minecraft/server.block.matches.blockname.description=要测试的方块类型的标识符。
script_api.@minecraft/server.block.matches.states.description=要测试的方块状态集合。
script_api.@minecraft/server.block.matches.return=如果该方块符合给定的条件，返回`true`。
script_api.@minecraft/server.block.north.description=获取位于该方块北面一定距离处的方块（即Z轴负方向延长线上的方块）。
script_api.@minecraft/server.block.north.steps.description=向Z轴负方向延伸的距离（以方块数为单位）。默认值为`1`。
script_api.@minecraft/server.block.north.return=获取到的方块的`Block`对象。
script_api.@minecraft/server.block.offset.description=获取相对于该方块位置给定偏移量处的方块。
script_api.@minecraft/server.block.offset.offset.description=要偏移的量（以方块数为单位）。
script_api.@minecraft/server.block.offset.return=获取到的方块的`Block`对象。
script_api.@minecraft/server.block.setpermutation.description=设置该方块的置换。
script_api.@minecraft/server.block.setpermutation.permutation.description=要设置的置换的`BlockPermutation`对象。
script_api.@minecraft/server.block.setpermutation.return=对该方块完成置换设置。
script_api.@minecraft/server.block.settype.description=设置该方块的类型。
script_api.@minecraft/server.block.settype.blocktype.description=要设置的类型的标识符或`BlockType`对象。
script_api.@minecraft/server.block.settype.return=对该方块完成类型设置。
script_api.@minecraft/server.block.setwaterlogged.description=设置该方块的含水情况（仅对可含水方块有效）。
script_api.@minecraft/server.block.setwaterlogged.iswaterlogged.description=如果为`true`，则使该方块含水，否则取消含水。
script_api.@minecraft/server.block.setwaterlogged.return=对该方块完成含水设置。
script_api.@minecraft/server.block.south.description=获取位于该方块南面一定距离处的方块（即Z轴正方向延长线上的方块）。
script_api.@minecraft/server.block.south.steps.description=向Z轴正方向延伸的距离（以方块数为单位）。默认值为`1`。
script_api.@minecraft/server.block.south.return=获取到的方块的`Block`对象。
script_api.@minecraft/server.block.trysetpermutation.description=先检查放置可行性，然后再尝试设置该方块的置换。
script_api.@minecraft/server.block.trysetpermutation.permutation.description=要设置的置换的`BlockPermutation`对象。
script_api.@minecraft/server.block.trysetpermutation.return=如果成功设置了该方块的置换，返回`true`。
script_api.@minecraft/server.block.west.description=获取位于该方块西面一定距离处的方块（即X轴负方向延长线上的方块）。
script_api.@minecraft/server.block.west.steps.description=向X轴负方向延伸的距离（以方块数为单位）。默认值为`1`。
script_api.@minecraft/server.block.west.return=获取到的方块的`Block`对象。