{
    "packet": {
        "actoreventpacket": {
            "event_id": "ActorEvent"
        },
        "addplayerpacket": {
            "player_game_type": "GameType",
            "build_platform": "BuildPlatform"
        },
        "agentactioneventpacket": {
            "action": "AgentActionType"
        },
        "animateentitypacket": {
            "stop_expression_molang_version": "MolangVersion"
        },
        "animatepacket": {
            "action": "AnimatePacket::Action"
        },
        "availablecommandspacket": {
            "commands.example_element.permission_level": "CommandPermissionLevel"
        },
        "bookeditpacket": {
            "action": "BookEditAction"
        },
        "bosseventpacket": {
            "event_type": "BossEventUpdateType"
        },
        "cameraaimassistpacket": {
            "target_mode": "CameraAimAssistPacket::TargetMode",
            "action": "CameraAimAssistPacket::Action"
        },
        "camerashakepacket": {
            "shake_type": "CameraShakeType",
            "shake_action": "CameraShakeAction"
        },
        "clientbounddebugrendererpacket": {
            "debug_marker_type": "ClientboundDebugRendererPacket::Type"
        },
        "clientboundmapitemdatapacket": {
            "type_flags": "ClientboundMapItemDataPacket::Type"
        },
        "codebuildersourcepacket": {
            "operation": "CodeBuilderStorageQueryOptions::Operation",
            "category": "CodeBuilderStorageQueryOptions::Category",
            "codestatus": "CodeBuilderExecutionState::CodeStatus"
        },
        "commandblockupdatepacket": {
            "dependency_on_is_block.if_1.command_block_mode": "CommandBlockMode"
        },
        "commandoutputpacket": {
            "output_type": "CommandOutputType"
        },
        "completedusingitempacket": {
            "item_use_method": "ItemUseMethod"
        },
        "containerclosepacket": {
            "container_id": "ContainerID"
        },
        "containeropenpacket": {
            "container_id": "ContainerID",
            "container_type": "ContainerType"
        },
        "containersetdatapacket": {
            "container_id": "ContainerID"
        },
        "disconnectpacket": {
            "reason": "Connection::DisconnectFailReason"
        },
        "emotepacket": {
            "flags": "EmotePacket::Flags"
        },
        "gametestrequestpacket": {
            "rotation": "Rotation"
        },
        "interactpacket": {
            "action": "InteractPacket::Action"
        },
        "inventoryslotpacket": {
            "container_id": "ContainerID"
        },
        "inventorytransactionpacket": {
            "transaction_type": "ComplexInventoryTransaction::Type"
        },
        "itemstackrequestpacket": {
            "requests.example_element.actions.example_element.action_type": "ItemStackRequestActionType",
            "requests.example_element.stringstofilterorigin": "TextProcessingEventOrigin"
        },
        "labtablepacket": {
            "type": "LabTablePacket::Type",
            "reaction": "LabTableReactionType"
        },
        "legacytelemetryeventpacket": {
            "event_type": "LegacyTelemetryEventPacket::Type",
            "dependency_on_event_type.if_1.interaction_type": "MinecraftEventing::InteractionType",
            "dependency_on_event_type.if_1.interaction_actor_type": "ActorType",
            "dependency_on_event_type.if_4.instigators_child_actor_type": "ActorType",
            "dependency_on_event_type.if_4.damage_source": "ActorDamageCause",
            "dependency_on_event_type.if_6.damage_source": "ActorDamageCause",
            "dependency_on_event_type.if_7.boss_type": "ActorType",
            "dependency_on_event_type.if_8.result": "LegacyTelemetryEventPacket::AgentResult",
            "dependency_on_event_type.if_15.block_interaction_type": "MinecraftEventing::POIBlockInteractionType",
            "dependency_on_event_type.if_16.block_interaction_type": "MinecraftEventing::POIBlockInteractionType"
        },
        "lessonprogresspacket": {
            "lesson_action": "LessonAction"
        },
        "leveleventgenericpacket": {
            "event_id": "LevelEvent"
        },
        "leveleventpacket": {
            "event_id": "LevelEvent"
        },
        "levelsoundeventpacket": {
            "event_id": "Puv::Legacy::LevelSoundEvent"
        },
        "levelsoundeventpacketv1": {
            "event_id": "Puv::Legacy::LevelSoundEvent",
            "actor_type": "ActorType"
        },
        "levelsoundeventpacketv2": {
            "event_id": "Puv::Legacy::LevelSoundEvent"
        },
        "mobeffectpacket": {
            "event_id": "MobEffectPacket::Event"
        },
        "mobequipmentpacket": {
            "container_id": "ContainerID"
        },
        "movementeffectpacket": {
            "effect_id": "MovementEffectType"
        },
        "moveplayerpacket": {
            "position_mode": "PlayerPositionModeComponent::PositionMode"
        },
        "multiplayersettingspacket": {
            "type": "MultiplayerSettingsPacketType"
        },
        "networksettingspacket": {
            "compressionalgorithm": "PacketCompressionAlgorithm"
        },
        "npcdialoguepacket": {
            "npc_dialogue_action_type": "NpcDialoguePacket::NpcDialogueActionType"
        },
        "npcrequestpacket": {
            "request_type": "NpcRequestPacket::RequestType"
        },
        "packetviolationwarningpacket": {
            "violation_type": "PacketViolationType",
            "violation_severity": "PacketViolationSeverity",
            "violating_packet_id": "MinecraftPacketIds"
        },
        "phototransferpacket": {
            "type": "PhotoType",
            "source_type": "PhotoType"
        },
        "playeractionpacket": {
            "action": "PlayerActionType"
        },
        "playerauthinputpacket": {
            "input_mode": "InputMode",
            "play_mode": "ClientPlayMode",
            "new_interaction_model": "NewInteractionModel",
            "dependency_on_itemstackrequest_and_performitemstackrequest_bit_set.if_1.actions.example_element.action_type": "ItemStackRequestActionType",
            "dependency_on_itemstackrequest_and_performitemstackrequest_bit_set.if_1.stringstofilterorigin": "TextProcessingEventOrigin"
        },
        "playerhotbarpacket": {
            "container_id": "ContainerID"
        },
        "playerlistpacket": {
            "action": "PlayerListPacketType",
            "dependency_on_action.if_0.add_player_list.example_element.build_platform": "BuildPlatform"
        },
        "playstatuspacket": {
            "status": "PlayStatus"
        },
        "positiontrackingdbclientrequestpacket": {
            "action": "PositionTrackingDBClientRequestPacket::Action"
        },
        "positiontrackingdbserverbroadcastpacket": {
            "action": "PositionTrackingDBServerBroadcastPacket::Action"
        },
        "requestabilitypacket": {
            "ability": "AbilitiesIndex",
            "value_type": "RequestAbilityPacket::Type"
        },
        "requestpermissionspacket": {
            "player_permission_level": "PlayerPermissionLevel"
        },
        "resourcepackclientresponsepacket": {
            "response": "ResourcePackResponse"
        },
        "resourcepackdatainfopacket": {
            "pack_type": "PackType"
        },
        "respawnpacket": {
            "state": "PlayerRespawnState"
        },
        "serverboundloadingscreenpacket": {
            "loading_screen_packet_type": "ServerboundLoadingScreenPacketType"
        },
        "setdefaultgametypepacket": {
            "default_game_type": "GameType"
        },
        "setdifficultypacket": {
            "difficulty": "Difficulty"
        },
        "setdisplayobjectivepacket": {
            "sort_order": "ObjectiveSortOrder"
        },
        "sethudpacket": {
            "hud_element_list.example_element.hud_element": "HudElement",
            "ishudvisible": "HudVisibility"
        },
        "setlasthurtbypacket": {
            "last_hurt_by": "ActorType"
        },
        "setmovementauthoritypacket": {
            "newauthmovementmode": "ServerAuthMovementMode"
        },
        "setplayergametypepacket": {
            "player_game_type": "GameType"
        },
        "setplayerinventoryoptionspacket": {
            "left_inventory_tab": "InventoryLeftTabIndex",
            "right_inventory_tab": "InventoryRightTabIndex",
            "layout_inv": "InventoryLayout",
            "layout_craft": "InventoryLayout"
        },
        "setscoreboardidentitypacket": {
            "scoreboard_identity_packet_type": "ScoreboardIdentityPacketType"
        },
        "setscorepacket": {
            "score_packet_type": "ScorePacketType",
            "score_packet_info.example_element.dependency_on_is_change_type.if_1.dependency_on_identity_definition_type.if_1.identity_definition_type": "IdentityDefinition::Type",
            "score_packet_info.example_element.dependency_on_is_change_type.if_1.dependency_on_identity_definition_type.if_2.identity_definition_type": "IdentityDefinition::Type",
            "score_packet_info.example_element.dependency_on_is_change_type.if_1.dependency_on_identity_definition_type.if_3.identity_definition_type": "IdentityDefinition::Type"
        },
        "setspawnpositionpacket": {
            "spawn_position_type": "SpawnPositionType"
        },
        "settitlepacket": {
            "title_type": "SetTitlePacket::TitleType"
        },
        "showcreditspacket": {
            "credits_state": "ShowCreditsPacket::CreditsState"
        },
        "showstoreofferpacket": {
            "redirect_type": "ShowStoreOfferRedirectType"
        },
        "simpleeventpacket": {
            "type": "SimpleEventPacket::Subtype"
        },
        "simulationtypepacket": {
            "sim_type": "SimulationType"
        },
        "startgamepacket": {
            "actor_game_type": "GameType"
        },
        "structuretemplatedatarequestpacket": {
            "requested_operation": "StructureTemplateRequestOperation"
        },
        "structuretemplatedataresponsepacket": {
            "dependency_on_requested_structure_exists.if_0.response_type": "StructureTemplateResponseType",
            "dependency_on_requested_structure_exists.if_1.response_type": "StructureTemplateResponseType"
        },
        "subchunkpacket": {
            "subchunk_data_list.example_element.subchunk_request_result": "SubChunkPacket::SubChunkRequestResult",
            "subchunk_data_list.example_element.height_map_data_type": "SubChunkPacket::HeightMapDataType"
        },
        "textpacket": {
            "message_type": "TextPacketType"
        },
        "updateattributespacket": {
            "attribute_list.example_element.attribute_modifier.example_element.operation": "AttributeModifierOperation",
            "attribute_list.example_element.attribute_modifier.example_element.operand": "AttributeOperands"
        },
        "updateblocksyncedpacket": {
            "actor_sync_message": "ActorBlockSyncMessage::MessageId"
        },
        "updateequippacket": {
            "container_id": "ContainerID",
            "container_type": "ContainerType"
        },
        "updateplayergametypepacket": {
            "player_game_type": "GameType"
        },
        "updatesoftenumpacket": {
            "update_type": "SoftEnumUpdateType"
        },
        "updatesubchunkblockspacket": {
            "blocks_changed_standards.example_element.sync_message_message": "ActorBlockSyncMessage::MessageId",
            "blocks_changed_extras.example_element.sync_message_message": "ActorBlockSyncMessage::MessageId"
        },
        "updatetradepacket": {
            "container_id": "ContainerID",
            "container_type": "ContainerType"
        }
    },
    "type": {
        "actorlink": {
            "link_type": "ActorLinkType"
        },
        "basedescription": {
            "molang_descriptor.molang_version": "MolangVersion"
        },
        "commandorigindata": {
            "command_type": "CommandOriginType"
        },
        "compoundtag": {
            "tag_type": "Tag::Type",
            "dependency_on_if_tag_type_is_0.if_0.dependency_on_tag_type.if_9.dependency_on_if_empty_list.if_0.tag_type_for_list": "Tag::Type",
            "dependency_on_if_tag_type_is_0.if_0.dependency_on_tag_type.if_9.dependency_on_if_empty_list.if_1.tag_type": "Tag::Type"
        },
        "craftingdataentry": {
            "crafting_type": "CraftingDataEntryType"
        },
        "dataitem": {
            "type": "DataItemType"
        },
        "inventorysource": {
            "source_type": "InventorySourceType",
            "dependency_on_source_type.if_0.container_id": "ContainerID",
            "dependency_on_source_type.if_2.bit_flags": "InventorySource::InventorySourceFlags"
        },
        "itemenchants": {
            "item_enchants_for_given_activation.example_element.enchant_type": "Enchant::Type"
        },
        "itemstackrequestslotinfo": {
            "open_container_net_id": "ContainerEnumName"
        },
        "itemstackresponseinfo": {
            "result": "ItemStackNetResult"
        },
        "levelsettings": {
            "generator_type": "GeneratorType",
            "game_type": "GameType",
            "game_difficulty": "Difficulty",
            "editor_world_type": "Editor::WorldType",
            "education_edition_offer": "EducationEditionOffer",
            "xbox_live_broadcast_setting": "Social::GamePublishSetting",
            "platform_broadcast_setting": "Social::GamePublishSetting",
            "player_permissions": "PlayerPermissionLevel",
            "chatrestriction_level": "ChatRestrictionLevel"
        },
        "mapdecoration": {
            "map_decoration_type": "MapDecoration::Type"
        },
        "mapitemtrackedactor::uniqueid": {
            "type": "MapItemTrackedActor::Type"
        },
        "packeditemuselegacyinventorytransaction": {
            "dependency_on_valid_id.if_1.container_slots.example_element.container_enum_name": "ContainerEnumName",
            "action_type": "ItemUseInventoryTransaction::ActionType",
            "client_interact_prediction": "ItemUseInventoryTransaction::PredictedResult",
            "trigger_type": "ItemUseInventoryTransaction::TriggerType"
        },
        "recipeingredient": {
            "internaltype": "ItemDescriptor::InternalType"
        },
        "recipeunlockingrequirement": {
            "unlocking_context": "RecipeUnlockingRequirement::UnlockingContext"
        },
        "serializedabilitiesdata": {
            "mplayerpermissions": "PlayerPermissionLevel",
            "mcommandpermissions": "CommandPermissionLevel"
        },
        "serializedabilitiesdata::serializedlayer": {
            "serializedlayer": "SerializedAbilitiesData::SerializedAbilitiesLayer"
        },
        "serializedskin": {
            "animations.example_element.animation_type": "persona::AnimatedTextureType",
            "animations.example_element.animation_expression": "persona::AnimationExpression"
        },
        "spawnsettings": {
            "type": "SpawnBiomeType"
        },
        "structureeditordata": {
            "structure_block_type": "StructureBlockType",
            "redstone_save_mode": "StructureRedstoneSaveMode"
        },
        "structuresettings": {
            "rotation": "Rotation",
            "mirror": "Mirror",
            "animation_mode": "AnimationMode"
        },
        "syncedplayermovementsettings": {
            "authority_mode": "ServerAuthMovementMode"
        }
    }
}